name: Build

on: [push]

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu, windows]
        include:
          - os: ubuntu
            runs-on: ubuntu-20.04
            build-script: ./build.sh
          - os: windows
            runs-on: windows-2019
            build-script: ./build.bat
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: ${{ matrix.build-script }} hypo_out_${{ matrix.os }}_x64
      - name: Archive resulting executable
        uses: actions/upload-artifact@v2
        with:
          name: hypo-${{ matrix.os }}-x64
          path: hypo_out_${{ matrix.os }}_x64

  # If a tag starting with "v" is pushed, assume it represents a release and
  # go ahead and create a draft release for this version of the code.
  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      # First get the tag name without the "refs/tags/" part.
      - name: Get Tag Name
        id: tag_name
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      # Create the draft release, we'll add artifacts to it later.
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.tag_name.outputs.tag }}
          body: ENTER RELEASE NOTES HERE.
          draft: true
          prerelease: true  # I don't really know what this implies...
      # Download Linux and Windows artifacts.
      - uses: actions/download-artifact@v2
        with:
          name: hypo-ubuntu-x64
          path: ./hypo-ubuntu-x64
      - uses: actions/download-artifact@v2
        with:
          name: hypo-windows-x64
          path: ./hypo-windows-x64
      # Package up the artifacts into an archive native to the OS.
      - name: Package Artifacts
        run: |
          zip -r hypo-windows-x64.zip hypo-windows-x64
          tar -czvf hypo-ubuntu-x64.tar.gz hypo-ubuntu-x64
      # Finally upload the resulting archive packages to the draft release we
      # created a few steps ago.
      - name: Upload Ubuntu Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hypo-ubuntu-x64.tar.gz
          asset_name: hypo-ubuntu-x64.tar.gz
          asset_content_type: application/gzip
      - name: Upload Windows Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hypo-windows-x64.zip
          asset_name: hypo-windows-x64.zip
          asset_content_type: application/zip
