// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.112.0/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash",
		"nixEnvSelector.nixShellConfig": "${workspaceRoot}/src",
		"cmake.buildDirectory": "/cmake_out",
		"cmake.sourceDirectory": "${workspaceRoot}/src",
		"editor.formatOnSave": true,
		"files.associations": {
			"*.hs": "haskell",
		},
		"editor.tabSize": 2,
		"editor.rulers": [
			80
		],
		// Need to figure out still how to ensure that brittany is installed and
		// in the environment before enabling this extension in vs code.
		"brittany.enable": true,
		"brittany.stackEnable": false,
		// This project has a lot of unorthodox JS/TS usage, so disable the error
		// highlighting for it.
		"typescript.validate.enable": false,
		"javascript.validate.enable": false,
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"arrterian.nix-env-selector",
		"ms-vscode.cpptools",
		"xaver.clang-format",
		"twxs.cmake",
		"justusadam.language-haskell",
		"maxgabriel.brittany",
		"hoovercj.haskell-linter",
		"bbenoist.nix",
		"ms-vscode.vscode-typescript-next",
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment the next line to run commands after the container is created - for example installing git.
	// "postCreateCommand": "cd /workspace/src && nix-shell",
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined"
	],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker.
	"mounts": [
		"source=reify-vscode-extensions,target=/root/.vscode-server/extensions,type=volume",
		"source=reify-bashhistory,target=/commandhistory,type=volume",
		"source=nix,target=/nix,type=volume",
		"source=reify-cmake_out,target=/cmake_out,type=volume",
	],
	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
